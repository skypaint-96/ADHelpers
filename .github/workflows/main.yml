on: workflow_dispatch

jobs:
  create_package:
    runs-on: windows-latest
    steps:
    - name: Setup .NET Core SDK 
      uses: actions/setup-dotnet@v4.0.1
    - name: Clone Repo
      run: |
        git clone https://github.com/skypaint-96/ADHelpers.git -v
    - name: Build
      run: |
        dotnet build '.\ADHelpers\ADHelpers.csproj' -c release -v d
        mv .\adhelpers .\src;
        mv '.\src\bin\release\netstandard2.0\' .\adhelpers
    - name: Get Version
      id: version
      run: |
        import-module '.\adhelpers\adhelpers.dll' -scope local;
        $version = (get-module AdHelpers).version;
        "outVersion=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;
        "vVersion=v$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;
        "nVersion=ADHepers-v$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;
        remove-module adhelpers -force;
    - name: Create Manifest
      run: |
        New-ModuleManifest -Path '.\adhelpers\AdHelpers.psd1' `
            -RootModule 'ADHelpers' `
            -moduleversion $env:outVersion `
            -Guid '55b99733-8488-493e-a3cd-05cfcea90974' `
            -Author 'Mason Kerr' `
            -CompanyName 'Pasifico' `
            -Copyright '(c) 2024 Mason Kerr. All rights reserved.' `
            -CmdletsToExport '*' `
            -VariablesToExport '*' `
            -LicenseUri 'https://github.com/skypaint-96/ADHelpers/blob/master/LICENSE.txt' `
            -ProjectUri 'https://github.com/skypaint-96/ADHelpers' `
            -DefaultCommandPrefix 'ADEX'
    - name: Zip
      run: |
        compress-archive -path .\adhelpers\ -destinationpath ".\adhelpers-v$env:outVersion.zip" -Verbose
    - name: out
      run: |
        ls | %{resolve-path $_}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{env.vVersion}}
        release_name: ${{env.nVersion}}
        draft: true
        prerelease: false
#    - name: Upload Release Asset
#      id: upload-release-asset 
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
 #       upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
 #       asset_path: (".\adhelpers-v" + $outVersion + ".zip")
 #       asset_name: ("adhelpers-v" + $outVersion + ".zip")
 #       asset_content_type: application/zip
